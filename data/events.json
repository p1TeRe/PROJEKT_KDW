[null,{"name":"                                                             Wbil","temp":"user","event-type":"6","_id":"wBqgs","actions":[{"info":"0","find":"800835906181267467","storage":"1","varName":"kanal","name":"Find Channel"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar","name":"Store Member Info"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"ile","name":"Store Server Info"},{"title":"Witaj !","author":"${mentionedUser}","color":"#5affd7","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar\")}","timestamp":"true","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"","message":"**${tempVars(\"user\")}** Jest Naszym **${tempVars(\"ile\")}** Użytkownikiem Na Serwerze !","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","message":"💬","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"embed","channel":"5","varName2":"kanal","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","messageContent":"","name":"Send Embed Message"}]},{"name":"NewEvent","temp":"","event-type":"0","_id":"YHAjQ","actions":[]},{"name":"                                                            Wyszedl","temp":"user","event-type":"7","_id":"TjLZx","actions":[{"info":"0","find":"800835906181267467","storage":"1","varName":"kanal","name":"Find Channel"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar","name":"Store Member Info"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"ktory","name":"Store Server Info"},{"title":"Żegnaj !","author":"${mentionedUser}","color":"#FF0000","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar\")}","timestamp":"true","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"","message":"**${tempVars(\"user\")}** Opuścił Nasz Serwer.","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","message":"💬","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"embed","channel":"5","varName2":"kanal","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","messageContent":"","name":"Send Embed Message"}]},{"name":"                                                            Wyszedl","temp":"user","event-type":"4","_id":"MKTpb","actions":[{"info":"0","find":"800835906181267467","storage":"1","varName":"kanal","name":"Find Channel"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar","name":"Store Member Info"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"ktory","name":"Store Server Info"},{"title":"Żegnaj !","author":"${mentionedUser}","color":"#FF0000","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar\")}","timestamp":"true","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"","message":"**${tempVars(\"user\")}** Opuścił Nasz Serwer.","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","message":"💬","footerIcon":"","name":"Set Embed Footer"},{"storage":"1","varName":"embed","channel":"5","varName2":"kanal","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","messageContent":"","name":"Send Embed Message"}]},{"name":"Auto_Rola","temp":"memberjoins","event-type":"6","_id":"Mbojf","actions":[{"server":"0","varName":"","dataName":"serverroleidout","comparison":"1","value":"0","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check Server Data"},{"server":"0","varName":"","dataName":"autorolesecondout","defaultVal":"0","storage":"1","varName2":"secount3out","name":"Store Server Data"},{"time":"${tempVars(\"secount3out\")}","measurement":"1","name":"Wait"},{"server":"0","varName":"","dataName":"serverroleidout","defaultVal":"0","storage":"1","varName2":"roleid","name":"Store Server Data"},{"info":"0","find":"793210544270213182","storage":"1","varName":"setrole","name":"Find Role"},{"time":"0.6","measurement":"1","name":"Wait"},{"member":"2","varName2":"memberjoins","role":"3","varName":"setrole","name":"Add Member Role"}]},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"code":"if (globalVars(\"RoleReactionMenuAlreadyRan\") == null) {\n    const Discord = require(\"discord.js\");\n    const path = require(\"path\");\n    Actions.storeValue(true, 3, \"RoleReactionMenuAlreadyRan\", cache);\n\n    if(globalVars(\"installedStenoRequest\") == null) {\n        Actions.storeValue(true, 3, \"installedStenoRequest\", cache);\n\n        try {\n            require.resolve(\"request\");\n            require.resolve(\"graceful-fs\");\n            require.resolve(\"steno\");\n        } catch(e) {\n            console.log(\"Required NPM modules not found!\\n\\nInstalling modules..\");\n            var child_process = require('child_process');\n            child_process.execSync('npm install steno request graceful-fs',{stdio:\"pipe\"});\n            console.log(\"NPM Module Installation Complete\")\n        }\n        console.log(\"NPM Module Check Complete\\n\")\n    }\n\n    const request = require('request');\n    const fs = require('graceful-fs');\n    const steno = require('steno')\n\n    //Settings\n    const dmUserAfter = false; // Default: true, can be changed to false\n    var messageSentAdd = 'Successfully added the role {rolename} in {server}';\n    var messageSentRemove = 'Successfully removed the role {rolename} in {server}';\n    var debug = false; // Default: false, can be changed to true\n    var checkUpdates = true;\n    // The only variables that work rn, {rolename} and {server}\n\n    var requiredIntents = [\"GUILDS\",\"GUILD_MEMBERS\",\"GUILD_MESSAGE_REACTIONS\",\"GUILD_MESSAGES\"];\n    var intentCheck = new Discord.Intents(DBM.Bot.intents()).toArray();\n    requiredIntents.forEach(intent => {\n        if (!intentCheck.includes(intent)) {\n            console.log(`[Role Reaction] You don't have the ${intent} intent enabled!`)\n        }\n    })\n\n    if (checkUpdates) {\n        request('https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Role%20Reaction%20Menu/versionCheck.json', function(error, response, body) {\n            if (response.statusCode == 200) {\n                var allVersions = JSON.parse(body);\n\n                var commandVersions = {};\n                var eventVersions = {};\n                var commandKeys = [];\n                var eventKeys = [];\n\n                allVersions[\"commands\"].forEach(commandVer => {\n                    commandVersions[commandVer[0]] = commandVer[1];\n                    commandKeys.push(commandVer[0]);\n                });\n\n                allVersions[\"events\"].forEach(eventVer => {\n                    eventVersions[eventVer[0]] = eventVer[1];\n                    eventKeys.push(eventVer[0])\n                })\n\n                fs.readFile(\"./data/commands.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemCommands = await data.filter(command => command != null && commandKeys.includes(command[\"_id\"]));\n\n                    for (i = 0; i < systemCommands.length; i++) {\n                        var systemActionFind = await systemCommands[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemActionFind.length != 0) {\n                            var versionCheckSplit = systemActionFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit[1] != null && versionCheckSplit[1] != commandVersions[systemCommands[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Role Reaction] The command ${systemCommands[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n\n                fs.readFile(\"./data/events.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemEvent = await data.filter(event => event != null && eventKeys.includes(event[\"_id\"]));\n\n                    for (i = 0; i < systemEvent.length; i++) {\n                        var systemEventFind = await systemEvent[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemEventFind.length != 0) {\n                            var versionCheckSplit = systemEventFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit != null && versionCheckSplit[versionCheckSplit.length - 1] != eventVersions[systemEvent[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Role Reaction] The event ${systemEvent[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n            }\n        });\n    }\n\n    /*\n    if (globalVars(\"reactionRoleMoved\") == null) {\n        Files.saveGlobalVariable(\"reactionRoleMoved\", true);\n\n        var dataPath = path.normalize(\"./data/roleReaciton\")\n\n        if (!fs.existsSync(`./data/roleReaciton`)) {\n            fs.mkdirSync(`./data/roleReaciton`);\n        }\n\n        [\"reactionRoleData\"].forEach(fileName => {\n            if (fs.existsSync(`./data/${fileName}.json`)) {\n                fs.renameSync( `./data/${fileName}.json`, `./data/roleReaciton/${fileName}.json`);\n            }\n        });\n    }\n    */\n\n    var dataFolder = path.normalize(\"./data/roleReaciton\");\n    var dataFile = path.normalize(\"./data/roleReaciton/reactionRoleData.json\");\n\n    if (!fs.existsSync(dataFolder)) {\n        fs.mkdirSync(dataFolder);\n    }\n\n    if (fs.existsSync(dataFile)) {\n        fs.readFile(dataFile, function read(err, data) {\n            if (err) {\n                throw err;\n            }\n            data = JSON.parse(data)\n\n            Actions.storeValue(data, 3, 'reactionRoleInf', cache);\n        });\n    } else {\n        fs.writeFile(dataFile, \"{}\", function(err) {\n            if (err) {\n                return console.log(err);\n            }\n        });\n        Actions.storeValue({}, 3, 'reactionRoleInf', cache);\n    }\n\n    client.on('messageReactionAdd', async function(reaction, user) {\n        user = await user;\n\n        if (user == null) {\n            console.log(\"Role reaction error: User is not defined! Please make sure you have followed the new setup for intents to allow this command to work!\");\n        } else {\n            if (!user.bot && reaction != null) {\n                const reactionData = globalVars(\"reactionRoleInf\");\n                const reactionGuild = reaction.message.guild;\n                const reactionMessage = reaction.message;\n                if (reactionData.hasOwnProperty(reactionMessage.id)) {\n                    var emojiName = reaction.emoji.name;\n                    var roleInData = await reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n                    if (roleInData.length != 0) {\n                        var guilduser = await reactionGuild.members.cache.get(user.id);\n                        var roleData = roleInData[0][1];\n\n                        if (!guilduser.roles.cache.has(roleData)) {\n                            var reactionRole = await reactionGuild.roles.cache.get(roleData);\n\n                            guilduser.roles.add(reactionRole)\n                                .catch(function(error) {\n                                    guilduser.send(\"Sorry! I couldn't add the role due to either permission issues or the role's position may be higher than my highest role's position. Please contact an adminstrator about this issue.\")\n                                        .catch(function(error) {\n                                            if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                                console.log(error);\n                                            } else if (debug) {\n                                                console.log(`Unable to send user a message || ${guilduser.name}`)\n                                            }\n                                        });\n                                    if (debug) {\n                                        console.log(error);\n                                    }\n                                });\n\n\n                            if (dmUserAfter) {\n                                guilduser.send(messageSentAdd.replace(\"{rolename}\", `**${reactionRole.name}**`).replace(\"{server}\", `**${reactionGuild.name}**`))\n                                    .catch(function(error) {\n                                        if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                            console.log(error);\n                                        } else if (debug) {\n                                            console.log(`Unable to send user a message || ${guilduser.name}`)\n                                        }\n                                    });\n                            }\n\n                        }\n                    }\n                }\n            }\n        }\n\n    });\n\n    client.on('messageReactionRemove', async function(reaction, user) {\n        user = await user;\n\n        if (user == null) {\n            console.log(\"Role reaction error: User is not defined! Please make sure you have followed the new setup for intents to allow this command to work!\");\n        } else {\n            if (!user.bot) {\n                const reactionData = globalVars(\"reactionRoleInf\");\n                const reactionGuild = reaction.message.guild\n                const reactionMessage = reaction.message;\n                if (reactionData.hasOwnProperty(reactionMessage.id)) {\n                    var emojiName = reaction.emoji.name;\n                    var roleInData = await reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n                    if (roleInData.length != 0) {\n                        var guilduser = await reactionGuild.members.cache.get(user.id);\n                        var roleData = roleInData[0][1];\n\n                        if (guilduser.roles.cache.has(roleData)) {\n                            var reactionRole;\n                            reactionRole = await reactionGuild.roles.cache.get(roleData);\n\n                            guilduser.roles.remove(reactionRole)\n                                .catch(function(error) {\n                                    guilduser.send(\"Sorry! I couldn't remove the role due to either permission issues or the role's position may be higher than my highest role's position. Please contact an adminstrator about this issue.\")\n                                        .catch(function(error) {\n                                            if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                                console.log(error);\n                                            } else if (debug) {\n                                                console.log(`Unable to send user a message || ${guilduser.name}`)\n                                            }\n                                        });\n                                    if (debug) {\n                                        console.log(error);\n                                    }\n                                });\n\n                            if (dmUserAfter) {\n                                guilduser.send(messageSentRemove.replace(\"{rolename}\", `**${reactionRole.name}**`).replace(\"{server}\", `**${reactionGuild.name}**`))\n                                    .catch(function(error) {\n                                        if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                            console.log(error);\n                                        } else if (debug) {\n                                            console.log(`Unable to send user a message || ${guilduser.name}`)\n                                        }\n                                    });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    client.on('messageDelete', async function(message) {\n        const reactionData = globalVars(\"reactionRoleInf\");\n\n        if(reactionData.hasOwnProperty(message.id)) {\n            delete reactionData[message.id]\n            Actions.storeValue(reactionData, 3, \"reactionRoleInf\", cache);\n            steno.writeFile(dataFile, JSON.stringify(reactionData), function(err) {\n                if (err) {\n                    return console.log(err);\n                }\n            });\n        }\n    })\n}\n\n// VersionCheck:8","behavior":"0","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"}],"restriction":"0"},{"name":"❗ ","temp":"","event-type":"Invite Used","_id":"Njcgf","actions":[]}]